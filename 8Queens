def is_safe(board, row, col, num_queens):
    for i in range(col):
        if board[row][i] == 1:
            return False

    for i, j in zip(range(row, -1, -1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False
    for i, j in zip(range(row, num_queens, 1), range(col, -1, -1)):
        if board[i][j] == 1:
            return False

    return True

def solve_n_queens(board, col, num_queens):
    if col >= num_queens:
        return True
    for i in range(num_queens):
        if is_safe(board, i, col, num_queens):
            # Place this queen in board[i][col]
            board[i][col] = 1
            if solve_n_queens(board, col + 1, num_queens) == True:
                return True
            board[i][col] = 0
    return False

def solve():
    num_queens = int(input("Enter the number of queens: "))
    board = [[0]*num_queens for _ in range(num_queens)]

    if solve_n_queens(board, 0, num_queens) == False:
        print("Solution does not exist")
        return False

    print_board(board)
    return True

def print_board(board):
    for row in board:
        print(row)
solve()
